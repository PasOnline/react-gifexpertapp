{"version":3,"sources":["compontents/AddCategory.js","helpers/getGifs.js","compontents/GifGridItem.js","compontents/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","proTypes","ProTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAQd,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,eA6B/BZ,EAAYe,SAAW,CACnBd,cAAee,IAASC,KAAKC,Y,mCCnChBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCDXO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OADAc,QAAQC,IAAK,CAAEN,KAAIC,QAAOV,QAEtB,sBAAKgB,UAAU,gDAAf,UAEI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCJCS,EAAU,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAXAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,SAGjB,CAACtB,IAGGuB,EDfwBK,CAAc5B,GAAjCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAIpB,OAHAN,QAAQC,IAAIK,GAIR,qCACI,oBAAIJ,UAAU,wCAAd,SAAwDlB,IAEtDsB,GAAW,wCAGb,qBAAKJ,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEKA,GADCA,EAAIC,aElBrBkB,EAAe,WAGxB,MAAoC/C,mBAAS,CAAC,kBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAGA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWmB,KAAK,SAAAT,GAAQ,OAEpB,aADJ,CACK,EAAD,CAEAA,SAAWA,GADJA,Y,MChB/B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ef3535a9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport ProTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n \r\n    const [InputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSummit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( InputValue.trim().length > 2 ){\r\n            setCategories( categories =>[ InputValue, ...categories ] );\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSummit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value= { InputValue }\r\n                    onChange={ handleInputChange}\r\n                />\r\n            </form> \r\n             \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.proTypes = {\r\n    setCategories: ProTypes.func.isRequired\r\n}","\r\n\r\n\r\n    export const getGifs = async( category ) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=KLsAlQeHFasCuaKo3g4d6XPAZVKHsQLH`\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return { \r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n       \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    console.log( { id, title, url } );\r\n    return(\r\n        <div className=\"card animate__animated animate__bounceInRight\">\r\n        \r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        \r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) =>{\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    console.log(loading);\r\n     \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{ category }</h3> \r\n            \r\n            { loading && <p>Loading</p>}\r\n\r\n            {\r\n            <div className=\"card-grid\">                               \r\n                    { \r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img } \r\n                        />                      \r\n                        ))\r\n                    }         \r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            })\r\n        } );\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './compontents/AddCategory'\r\nimport { GifGrid } from './compontents/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n \r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories= {setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                    // return <li key={ category }> { category }</li>\r\n                        <GifGrid \r\n                        key= { category }\r\n                        category={ category } \r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n   \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}